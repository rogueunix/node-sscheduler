import * as moment from 'moment-timezone';
import { default as _format } from './format';
import { default as _toMoment } from './toMoment';
import { Nullable } from '../types';
import { ByDay, Format, Interval, IntervalOptions, MomentInterval, RequiredIntervalOptions } from './types';
declare const byDay: (a1: Interval[], options: string | IntervalOptions) => ByDay;
declare const createMany: (a1: number, a2: moment.Moment, a3: number, a4: number, a5: string | undefined, options: IntervalOptions) => Interval[];
declare const indicesBetween: (a1: Interval[], a2: Interval, options: string | IntervalOptions) => [number, number];
declare const intersect: (a1: Interval | Interval[], a2: Interval | Interval[], options: IntervalOptions) => Interval[];
declare const hasIntersection: (a1: Interval, a2: Interval, options: string | IntervalOptions) => boolean;
declare const isBetween: (a1: Nullable<Interval>, a2: Nullable<Interval>, options: string | IntervalOptions) => boolean;
declare const isEqual: (a1: Nullable<Interval>, a2: Nullable<Interval>, options: string | IntervalOptions) => boolean;
declare const isGreaterOrEqual: (a1: Nullable<Interval>, a2: Nullable<Interval>, options: string | IntervalOptions) => boolean;
declare const isGreaterOrEqualMinutes: (a1: number, a2: Interval, options: string | IntervalOptions) => boolean;
declare const limitByRange: (a1: Interval[], a2: Interval, options: IntervalOptions) => Interval[];
declare const partition: (a1: Interval | Interval[], a2: number, a3: number, options: IntervalOptions) => Interval[];
declare const substract: (a1: Nullable<Interval | Interval[]>, a2: Nullable<Interval | Interval[]>, options: IntervalOptions) => Interval[];
declare const sort: (intervals: Interval[], options: IntervalOptions, reverse?: boolean) => MomentInterval[];
export { ByDay, Format, Interval, IntervalOptions, MomentInterval, RequiredIntervalOptions, byDay, createMany, hasIntersection, intersect, indicesBetween, isBetween, isEqual, isGreaterOrEqual, isGreaterOrEqualMinutes, limitByRange, partition, sort, substract, _toMoment as toMoment, _format as format };
